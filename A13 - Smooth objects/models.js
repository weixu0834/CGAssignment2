function buildGeometry() {
	// Draws a pyramid --- Already done, just for inspiration
	var vert1 = [[0.0,1.0,0.0, 0.0, 0.4472,-0.8944],[ 1.0,-1.0,-1.0, 0.0, 0.4472,-0.8944],[-1.0,-1.0,-1.0, 0.0, 0.4472,-0.8944],
				 [0.0,1.0,0.0, 0.8944, 0.4472,0.0],[ 1.0,-1.0, 1.0, 0.8944, 0.4472,0.0],[ 1.0,-1.0,-1.0, 0.8944, 0.4472,0.0], 
				 [0.0,1.0,0.0, 0.0, 0.4472,0.8944],[-1.0,-1.0, 1.0, 0.0, 0.4472,0.8944],[ 1.0,-1.0, 1.0, 0.0, 0.4472,0.8944], 
				 [0.0,1.0,0.0, -0.8944, 0.4472,0.0],[-1.0,-1.0,-1.0, -0.8944, 0.4472,0.0],[-1.0,-1.0, 1.0, -0.8944, 0.4472,0.0], 
				 [-1.0,-1.0,-1.0, 0.0,-1.0,0.0],[1.0,-1.0,-1.0, 0.0,-1.0,0.0], [1.0,-1.0,1.0, 0.0,-1.0,0.0], [-1.0,-1.0,1.0, 0.0,-1.0,0.0],
				];
	var ind1 = [0, 1, 2,  3, 4, 5,  6, 7, 8,  9, 10, 11,  12, 13, 14,  12, 14, 15];
	var color1 = [0.0, 0.0, 1.0];
	addMesh(vert1, ind1, color1);
	
	// Draws a cube -- To do for the assignment.
	var vert2 = [
			[-1.0, 1.0,-1.0, 0.0, 1.0, 0.0], 	//  0
				[ 1.0, 1.0,-1.0, 0.0, 1.0, 0.0],  //  1
				[-1.0, 1.0, 1.0, 0.0, 1.0, 0.0],  //  2
				[ 1.0, 1.0, 1.0, 0.0, 1.0, 0.0],  //  3
			[-1.0,-1.0,-1.0, 0.0,-1.0, 0.0],  //  4
				[ 1.0,-1.0,-1.0, 0.0,-1.0, 0.0],  //  5
				[-1.0,-1.0, 1.0, 0.0,-1.0, 0.0],  //  6
				[ 1.0,-1.0, 1.0, 0.0,-1.0, 0.0],  //  7
			[ 1.0, 1.0, 1.0, 1.0, 0.0, 0.0],  //  8
				[ 1.0, 1.0,-1.0, 1.0, 0.0,0.0],  //  9
				[ 1.0,-1.0, 1.0, 1.0, 0.0,0.0],  // 10
				[ 1.0,-1.0,-1.0, 1.0, 0.0,0.0],  // 11
			[-1.0, 1.0, 1.0,-1.0, 0.0, 0.0],  //  12
				[-1.0, 1.0,-1.0,-1.0, 0.0,0.0],  // 13
				[-1.0,-1.0, 1.0,-1.0, 0.0,0.0],  // 14
				[-1.0,-1.0,-1.0,-1.0, 0.0,0.0],  // 15
			[-1.0, 1.0, 1.0,0.0, 0.0, 1.0],  // 16
				[ 1.0, 1.0, 1.0, 0.0, 0.0, 1.0],  // 17
				[-1.0,-1.0, 1.0, 0.0, 0.0, 1.0],  // 18
				[ 1.0,-1.0, 1.0, 0.0, 0.0, 1.0],  // 19
			[-1.0, 1.0,-1.0,0.0, 0.0,-1.0],  // 20
				[ 1.0, 1.0,-1.0, 0.0, 0.0,-1.0],  // 21
				[-1.0,-1.0,-1.0, 0.0, 0.0,-1.0],  // 22
				[ 1.0,-1.0,-1.0, 0.0, 0.0,-1.0],  // 23
	];
	var ind2 = [ 	// Face #:
		//f1 (y_pos norm)
	  2,  1,  0,	//  0
	  3,  1,  2,    //  1
		//-------
		//f3 (y_neg norm)
		4,  5,  6,    //  2
	  5, 7,  6,    //  3
		//-------
		//f2 (x_pos norm)
	 11,  9,  8,    //  4
	 11, 8,  10,    //  5
		//-------
		//f4 (x_neg norm)
	 12, 13, 14,    //  6
	 13, 15, 14,    //  7
	 //--------
	 //f5 (z_pos norm)
	 19, 17, 16,    //  8
	 19, 16, 18,    //  9
	 //------------
	 // f6 (z_neg norm)
	 20, 21, 22,    // 10
	 21, 23, 22     // 11
	];
	var color2 = [0.0, 1.0, 1.0];
	addMesh(vert2, ind2, color2);
	
	// Draws function y = sin(x) * cos(z) with -3 <= x <= 3 and -3 <= z <= 3 -- To do for the assignment.
	// var vert3 = [[-1.0,-1.0,0.0, 0.0, 0.0,1.0], [1.0,-1.0,0.0, 0.0, 0.0,1.0], [1.0,1.0,0.0, 0.0, 0.0,1.0], [-1.0,1.0,0.0, 0.0, 0.0,1.0]];
	// var ind3 = [0, 1, 2,  0, 2, 3];
	var color3 = [0.0, 1.0, 1.0];
	var vert3 = [];
	var k = 0;
	for(i = 0; i <= 6; i=i+0.125) {
		for(j = 0; j <= 6; j=j+0.125) {
			x = i - 3;
			z = j - 3;
			vert3[k++] = [x, Math.sin(x)*Math.cos(z), z,- Math.cos(z)*Math.cos(x), 1, Math.sin(x)*Math.sin(z)];

		}
	}
	////// Creates indices
	var ind3 = [];
	for(i = 0; i < 48; i++) {
		for(j = 0; j < 48; j++) {
			ind3[48*(i*48+j)  ] = 49*j+i;
			ind3[48*(i*48+j)+1] = 49*j+i+1;
			ind3[48*(i*48+j)+2] = 49*(j+1)+i+1;
			ind3[48*(i*48+j)+3] = 49*j+i;
			ind3[48*(i*48+j)+4] = 49*(j+1)+i+1;
			ind3[48*(i*48+j)+5] = 49*(j+1)+i;
		}
	}
	addMesh(vert3, ind3, color3);
	
	// Draws a Cylinder --- To do for the assignment
	//var vert4 = [[-1.0,-1.0,0.0, 0.0, 0.0,1.0], [1.0,-1.0,0.0, 0.0, 0.0,1.0], [1.0,1.0,0.0, 0.0, 0.0,1.0], [-1.0,1.0,0.0, 0.0, 0.0,1.0]];
	//var ind4 = [0, 1, 2,  0, 2, 3];
	var color4 = [1.0, 1.0, 0.0];

	///// Creates vertices
	var vert4 = [[0.0, 1.0, 0.0,0.0,1.0,0.0]];  // center of upper disk

	//lower circle vertices
	for(i = 0; i < 36; i++) {
		vert4[i+1] = [Math.sin(i*10.0/180.0*Math.PI), 1.0, Math.cos(i*10.0/180.0*Math.PI),0.0, 1.0, 0.0];
		vert4[i+37] = [Math.sin(i*10.0/180.0*Math.PI), 1.0, Math.cos(i*10.0/180.0*Math.PI),
						Math.sin(i*10.0/180.0*Math.PI), 0.0, Math.cos(i*10.0/180.0*Math.PI)];

		vert4[i+73] = [Math.sin(i*10.0/180.0*Math.PI),-1.0, Math.cos(i*10.0/180.0*Math.PI),
						Math.sin(i*10.0/180.0*Math.PI), 0.0, Math.cos(i*10.0/180.0*Math.PI)];
		vert4[i+109] = [Math.sin(i*10.0/180.0*Math.PI),-1.0, Math.cos(i*10.0/180.0*Math.PI),0.0, -1.0, 0.0];
	}

	vert4[145] = [0.0, -1.0, 0.0,0.0, -1.0, 0.0];  // center of lower disk

	////// Creates indices
	var ind4 = [];
	//////// Upper part
	j = 0;
	for(i = 0; i < 36; i++) {
		ind4[j++] = 0;
		ind4[j++] = i + 1;
		ind4[j++] = (i + 1) % 36 + 1;
	}
	//////// Lower part
	for(i = 0; i < 36; i++) {
		ind4[j++] = 145;
		ind4[j++] = (i + 1) % 36 + 109;
		ind4[j++] = i + 109;
	}
	//////// Mid part
	for(i = 0; i < 36; i++) {
		ind4[j++] = i + 73;
		ind4[j++] = (i + 1) % 36 + 37;
		ind4[j++] = i + 37;

		ind4[j++] = (i + 1) % 36 + 37;
		ind4[j++] = i + 73;
		ind4[j++] = (i + 1) % 36 + 73;
	}

	addMesh(vert4, ind4, color4);

	// Draws a Sphere --- To do for the assignment.
	// var vert5 = [[-1.0,-1.0,0.0, 0.0, 0.0,1.0], [1.0,-1.0,0.0, 0.0, 0.0,1.0], [1.0,1.0,0.0, 0.0, 0.0,1.0], [-1.0,1.0,0.0, 0.0, 0.0,1.0]];
	// var ind5 = [0, 1, 2,  0, 2, 3];
	var color5 = [1.0, 0.0, 0.0];
	var vert5 = [[0.0, 1.0,0.0,0.0, 1.0,0.0]];
	///// Creates vertices
	k = 1;
	for(j = 1; j < 18; j++) {
		for(i = 0; i < 36; i++) {
			x = Math.sin(i*10.0/180.0*Math.PI) * Math.sin(j*10.0/180.0*Math.PI);
			y = Math.cos(j*10.0/180.0*Math.PI);
			z = Math.cos(i*10.0/180.0*Math.PI) * Math.sin(j*10.0/180.0*Math.PI);

			vert5[k++] = [x, y, z,x, y, z];
		}
	}
	lastVert = k;
	vert5[k] = [0.0,-1.0,0.0,0,-1.0,0.0];

	////// Creates indices
	var ind5 = [];
	k = 0; 
	///////// Lateral part
	for(i = 0; i < 36; i++) {
		for(j = 1; j < 17; j++) {
			ind5[k++] = i + (j-1) * 36 + 1;
			ind5[k++] = i + j * 36 + 1;
			ind5[k++] = (i + 1) % 36 + (j-1) * 36 + 1;

			ind5[k++] = (i + 1) % 36 + (j-1) * 36 + 1;
			ind5[k++] = i + j * 36 + 1;
			ind5[k++] = (i + 1) % 36 + j * 36 + 1;
		}
	}
	//////// Upper Cap
	for(i = 0; i < 36; i++) {
		ind5[k++] = 0;
		ind5[k++] = i + 1;
		ind5[k++] = (i + 1) % 36 + 1;
	}
	//////// Lower Cap
	for(i = 0; i < 36; i++) {
		ind5[k++] = lastVert;
		ind5[k++] = (i + 1) % 36 + 541;
		ind5[k++] = i + 541;
	}

	addMesh(vert5, ind5, color5);
}

